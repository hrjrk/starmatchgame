{"ast":null,"code":"var _jsxFileName = \"/Users/hv055937/Library/MyWorkspace/myprojects/starmatchgame/src/StarMatch.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst StarMatch = () => {\n  const stars = 5;\n  return React.createElement(\"div\", {\n    className: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Pick one or more numbers that sum to the stars.\"), React.createElement(\"div\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, utils.range(1, stars).map(starId => React.createElement(\"div\", {\n    key: starId,\n    className: \"star\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, utils.range(1, 9).map(buttonId => React.createElement(\"button\", {\n    key: buttonId,\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, buttonId)))), React.createElement(\"div\", {\n    className: \"timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Time remaining: 10\"));\n};\n\nconst colors = {\n  available: 'lightgray',\n  used: 'lightgreen',\n  wrong: 'lightcoral',\n  candidate: 'deepskyblue'\n};\nconst utils = {\n  //sum an array\n  sum: arr => arr.reduce((total, num) => total + num, 0),\n  // create an array of numbers between min and max (edges included)\n  range: (min, max) => Array.from({\n    length: max - min + 1\n  }, (_, i) => min + i),\n  // pick a random number between min and max (edges included)\n  random: (min, max) => min + Math.floor(max * Math.random()),\n  // Given an array of numbers and a max...\n  // Pick a random sum (< max) from the set of all available sums in arr\n  randomSumIn: (arr, max) => {\n    const sets = [[]];\n    const sums = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0, len = sets.length; j < len; j++) {\n        const candidateSet = sets[j].concat(arr[i]);\n        const candidateSum = utils.sum(candidateSet);\n\n        if (candidateSum <= max) {\n          sets.push(candidateSet);\n          sums.push(candidateSum);\n        }\n      }\n    }\n\n    return sums[utils.random(0, sums.length)];\n  }\n};\nexport default StarMatch;","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/starmatchgame/src/StarMatch.js"],"names":["React","StarMatch","stars","utils","range","map","starId","buttonId","colors","available","used","wrong","candidate","sum","arr","reduce","total","num","min","max","Array","from","length","_","i","random","Math","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst StarMatch = () => {\n  const stars = 5;\n  return (\n      <div className=\"game\">\n        <div className=\"help\">\n          Pick one or more numbers that sum to the stars.\n        </div>\n        <div className=\"body\">\n          <div className=\"left\">\n              {utils.range(1, stars).map((starId)=> <div key={starId} className=\"star\"/>)}\n          </div>\n          <div className=\"right\">\n              {utils.range(1, 9).map((buttonId)=> <button key={buttonId} className=\"number\">{buttonId}</button>)}\n          </div>\n        </div>\n        <div className=\"timer\">Time remaining: 10</div>\n      </div>\n  );\n};\n\nconst colors = {\n        available: 'lightgray',\n        used: 'lightgreen',\n        wrong: 'lightcoral',\n        candidate: 'deepskyblue'\n};\n\nconst utils = {\n\n    //sum an array\n    sum: arr => arr.reduce((total, num)=> total+num, 0),\n\n    // create an array of numbers between min and max (edges included)\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\n\n    // pick a random number between min and max (edges included)\n    random: (min, max) => min + Math.floor(max * Math.random()),\n\n    // Given an array of numbers and a max...\n    // Pick a random sum (< max) from the set of all available sums in arr\n    randomSumIn: (arr, max) => {\n        const sets = [[]];\n        const sums = [];\n        for (let i = 0; i < arr.length; i++) {\n            for (let j = 0, len = sets.length; j < len; j++) {\n                const candidateSet = sets[j].concat(arr[i]);\n                const candidateSum = utils.sum(candidateSet);\n                if (candidateSum <= max) {\n                    sets.push(candidateSet);\n                    sums.push(candidateSum);\n                }\n            }\n        }\n        return sums[utils.random(0, sums.length)];\n    },\n};\n\nexport default StarMatch;\n"]},"metadata":{},"sourceType":"module"}